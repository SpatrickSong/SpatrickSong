<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
    MyBatis核心配置文件中，必须按照顺序配置
    properties?,settings?,typeAliases?,typeHandlers?,
    objectFactory?,objectWrapperFactory?,reflectorFactory?,
    plugins?,environments?,databaseIdProvider?,mappers?
    -->
    <!--引入properties文件,通过${key}获取文件内容-->
    <properties resource="jdbc.properties"/>
    <settings>
        <!--将表中字段的下划线自动转换为驼峰-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--开启延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
    </settings>
    <!--设置类型别名，类型别名不区分大小写-->
    <typeAliases>
        <!--
            typeAlias：设置某个类型别名
            属性：
                type：设置需要设置别名的类型
                alias：属性可以不设置，如果设置那么别名就是设置的别名，
                       如果不设置默认就是当前的类名且不区分大小写
        -->
        <typeAlias type="com.beyondsoft.mybatis.pojo.User" alias="user"></typeAlias>
        <!--package:以包为单位，将包下的所有类型设置默认的类型别名，即类名且不区分大小写（最常用）-->
        <package name="com.beyondsoft.mybatis.pojo"/>
    </typeAliases>
    <!--
     environments：配置多个连接数据库的环境
     属性：
        default：设置默认使用的环境的id
    -->
    <environments default="development">
        <!--
            environment：配置某个具体的连接数据库的环境
            属性：
                id：表示连接数据库的环境的唯一标识，不能重复
        -->
        <environment id="development">
            <!--
                transactionManager设置事务管理方式
                属性：
                    type="JDBC/MANAGED"
                    JDBC：表示当前环境中，执行SQL时，使用的是JDBC中原生的事务管理方式，事务的提交或回滚需要手动处理
                    MANAGED：被管理，例如Spring
            -->
            <transactionManager type="JDBC"/>
            <!--
                dataSource：配置数据源，POOLED使用数据库连接池
                属性：
                    type：设置数据源的类型
                    type="POOLED/UNPOOLED/JNDI"
                    POOLED：表示使用数据库连接池缓存数据库连接，当再次获取连接数据库时，就只需要在缓存中获取
                    UNPOOLED：表示不使用数据库连接池
                    JNDI：表示使用上下文中的数据源
            -->
<!--            <dataSource type="POOLED">
                &lt;!&ndash;设置连接数据库的驱动&ndash;&gt;
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                &lt;!&ndash;设置连接数据库的连接地址&ndash;&gt;
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEncoding=utf-8"/>
                &lt;!&ndash;设置连接数据库的用户名&ndash;&gt;
                <property name="username" value="root"/>
                &lt;!&ndash;设置连接数据库的密码&ndash;&gt;
                <property name="password" value="123456"/>
            </dataSource>-->
            <dataSource type="POOLED">
                <!--设置连接数据库的驱动-->
                <property name="driver" value="${jdbc.driver}"/>
                <!--设置连接数据库的连接地址-->
                <property name="url" value="${jdbc.url}"/>
                <!--设置连接数据库的用户名-->
                <property name="username" value="${jdbc.username}"/>
                <!--设置连接数据库的密码-->
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--引入映射文件-->
    <mappers>
        <!--<mapper resource="mappers/UserMapper.xml"/>-->
        <!--
            package:以包为单位引入映射文件
            要求：
                1.mapper接口所在的包要和映射文件所在的包一致
                2.mapper接口要和映射文件的名字一致

        -->
        <package name="com.beyondsoft.mybatis.mapper"/>
    </mappers>
</configuration>